name: Tests
#  Tests workflow builds all of the example smart contracts and then runs tests with them on Provenance
#  This workflow is run on pushes to master & every Pull Request,
on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  #  This action cleans up previously running instances of a workflow on the same branch. This accomplishes
  #  the task of automatically cancelling CI runs on pushes to the same branch, which is a common feature in
  #  most CI systems but currently not possible with GitHub actions.
  cleanup-runs:
    runs-on: ubuntu-latest
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@v0.3.3
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/main'"

  test_tutorial_smart_contract:
    runs-on: ubuntu-latest
    name: Test Tutorial Smart Contract
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Add wasm32 target
        run: |
          rustup target add wasm32-unknown-unknown
      - name: Build wasm binary
        run: |
          cd ./contracts/tutorial
          make all
      - name: Smart Contract Test setup
        uses: provenance-io/provenance-testing-action@v1.2.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          provenance_version: "v1.16.0"
          smart_contract_action_version: "v1.2.0"
          test_script: "./scripts/gh-action-test/tutorial_test.sh"

  test_attrs_smart_contract:
    runs-on: ubuntu-latest
    name: Test Attr Smart Contract
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Add wasm32 target
        run: |
          rustup target add wasm32-unknown-unknown
      - name: Build wasm binary
        run: |
          cd ./contracts/attrs
          make all
      - name: Smart Contract Test setup
        uses: provenance-io/provenance-testing-action@v1.2.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          provenance_version: "v1.16.0"
          smart_contract_action_version: "v1.2.0"
          test_script: "./scripts/gh-action-test/attrs_test.sh"

  test_marker_smart_contract:
    runs-on: ubuntu-latest
    name: Test Marker Smart Contract
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Add wasm32 target
        run: |
          rustup target add wasm32-unknown-unknown
      - name: Build wasm binary
        run: |
          cd ./contracts/marker
          make all
      - name: Provenance Test
        uses: provenance-io/provenance-testing-action@v1.2.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          provenance_version: "v1.16.0"
          smart_contract_action_version: "v1.2.0"
          test_script: "./scripts/gh-action-test/marker_test.sh"

  test_msgfees_smart_contract:
    runs-on: ubuntu-latest
    name: Test MsgFees Smart Contract
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Add wasm32 target
        run: |
          rustup target add wasm32-unknown-unknown
      - name: Build wasm binary
        run: |
          cd ./contracts/msgfees
          make all
      - name: Provenance Test
        uses: provenance-io/provenance-testing-action@v1.2.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          provenance_version: "v1.16.0"
          smart_contract_action_version: "v1.2.0"
          test_script: "./scripts/gh-action-test/msgfees_test.sh"

  test_name_smart_contract:
    runs-on: ubuntu-latest
    name: Test Name Smart Contract
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Add wasm32 target
        run: |
          rustup target add wasm32-unknown-unknown
      - name: Build wasm binary
        run: |
          cd ./contracts/name
          make all
      - name: Smart Contract Test setup
        uses: provenance-io/provenance-testing-action@v1.2.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          provenance_version: "v1.16.0"
          smart_contract_action_version: "v1.2.0"
          test_script: "./scripts/gh-action-test/name_test.sh"

  test_scope_smart_contract:
    runs-on: ubuntu-latest
    name: Test Scope Smart Contract
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Add wasm32 target
        run: |
          rustup target add wasm32-unknown-unknown
      - name: Build wasm binary
        run: |
          cd ./contracts/scope
          make all
      - name: Smart Contract Test setup
        uses: provenance-io/provenance-testing-action@v1.2.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          provenance_version: "v1.16.0"
          smart_contract_action_version: "v1.2.0"
          test_script: "./scripts/gh-action-test/scope_test.sh"

  test_trigger_smart_contract:
    runs-on: ubuntu-latest
    name: Test Trigger Smart Contract
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Add wasm32 target
        run: |
          rustup target add wasm32-unknown-unknown
      - name: Build wasm binary
        run: |
          cd ./contracts/trigger
          make all
      - name: Smart Contract Test setup
        uses: provenance-io/provenance-testing-action@v1.2.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          provenance_version: "v1.16.0"
          smart_contract_action_version: "v1.2.0"
          test_script: "./scripts/gh-action-test/trigger_test.sh"
