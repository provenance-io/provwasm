{
  "contract_name": "name",
  "contract_version": "2.3.0",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "type": "object",
    "required": [
      "name"
    ],
    "properties": {
      "name": {
        "type": "string"
      }
    },
    "additionalProperties": false
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "oneOf": [
      {
        "type": "object",
        "required": [
          "bind_prefix"
        ],
        "properties": {
          "bind_prefix": {
            "type": "object",
            "required": [
              "prefix"
            ],
            "properties": {
              "prefix": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "unbind_prefix"
        ],
        "properties": {
          "unbind_prefix": {
            "type": "object",
            "required": [
              "prefix"
            ],
            "properties": {
              "prefix": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ]
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "oneOf": [
      {
        "type": "object",
        "required": [
          "resolve"
        ],
        "properties": {
          "resolve": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "lookup"
        ],
        "properties": {
          "lookup": {
            "type": "object",
            "required": [
              "address"
            ],
            "properties": {
              "address": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "params"
        ],
        "properties": {
          "params": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ]
  },
  "migrate": null,
  "sudo": null,
  "responses": {
    "lookup": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "QueryReverseLookupResponse",
      "description": "QueryReverseLookupResponse is the response type for the Query/Resolve method.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "an array of names bound against a given address",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pagination": {
          "description": "pagination defines an optional pagination for the request.",
          "anyOf": [
            {
              "$ref": "#/definitions/PageResponse"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "definitions": {
        "PageResponse": {
          "description": "PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.\n\nmessage SomeResponse { repeated Bar results = 1; PageResponse page = 2; }",
          "type": "object",
          "required": [
            "total"
          ],
          "properties": {
            "next_key": {
              "description": "next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": "integer",
                "format": "uint8",
                "minimum": 0.0
              }
            },
            "total": {
              "description": "total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise",
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      }
    },
    "params": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "QueryParamsResponse",
      "description": "QueryParamsResponse is the response type for the Query/Params RPC method.",
      "type": "object",
      "properties": {
        "params": {
          "description": "params defines the parameters of the module.",
          "anyOf": [
            {
              "$ref": "#/definitions/Params"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "definitions": {
        "Params": {
          "description": "Params defines the set of params for the name module.",
          "type": "object",
          "required": [
            "allow_unrestricted_names",
            "max_name_levels",
            "max_segment_length",
            "min_segment_length"
          ],
          "properties": {
            "allow_unrestricted_names": {
              "description": "determines if unrestricted name keys are allowed or not",
              "type": "boolean"
            },
            "max_name_levels": {
              "description": "maximum number of name segments to allow.  Example: `foo.bar.baz` would be 3",
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "max_segment_length": {
              "description": "maximum length of name segment to allow",
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "min_segment_length": {
              "description": "minimum length of name segment to allow",
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            }
          }
        }
      }
    },
    "resolve": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "QueryResolveResponse",
      "description": "QueryResolveResponse is the response type for the Query/Resolve method.",
      "type": "object",
      "required": [
        "address",
        "restricted"
      ],
      "properties": {
        "address": {
          "description": "a string containing the address the name resolves to",
          "type": "string"
        },
        "restricted": {
          "description": "Whether owner signature is required to add sub-names.",
          "type": "boolean"
        }
      }
    }
  }
}
